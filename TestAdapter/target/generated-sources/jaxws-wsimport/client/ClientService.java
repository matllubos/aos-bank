
package client;

import java.math.BigDecimal;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import backend.LoanData;
import backend.TransactionLogData;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ClientService", targetNamespace = "http://client/")
@XmlSeeAlso({
    backend.ObjectFactory.class,
    client.ObjectFactory.class
})
public interface ClientService {


    /**
     * 
     * @param amount
     * @param accountNumber
     * @param currency
     * @return
     *     returns java.math.BigDecimal
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "currentBalance", targetNamespace = "")
    @RequestWrapper(localName = "depositMoney", targetNamespace = "http://client/", className = "client.DepositMoney")
    @ResponseWrapper(localName = "depositMoneyResponse", targetNamespace = "http://client/", className = "client.DepositMoneyResponse")
    public BigDecimal depositMoney(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount,
        @WebParam(name = "currency", targetNamespace = "")
        String currency)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param accountNumber
     * @param currency
     * @return
     *     returns java.math.BigDecimal
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "balance", targetNamespace = "")
    @RequestWrapper(localName = "getCurrentBalance", targetNamespace = "http://client/", className = "client.GetCurrentBalance")
    @ResponseWrapper(localName = "getCurrentBalanceResponse", targetNamespace = "http://client/", className = "client.GetCurrentBalanceResponse")
    public BigDecimal getCurrentBalance(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber,
        @WebParam(name = "currency", targetNamespace = "")
        String currency)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param amount
     * @param accountNumber
     * @param currency
     * @return
     *     returns java.math.BigDecimal
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "currentBalance", targetNamespace = "")
    @RequestWrapper(localName = "withdrawMoney", targetNamespace = "http://client/", className = "client.WithdrawMoney")
    @ResponseWrapper(localName = "withdrawMoneyResponse", targetNamespace = "http://client/", className = "client.WithdrawMoneyResponse")
    public BigDecimal withdrawMoney(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount,
        @WebParam(name = "currency", targetNamespace = "")
        String currency)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param accountNumber
     * @return
     *     returns byte[]
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "getAccouljntStatementResponse", targetNamespace = "")
    @RequestWrapper(localName = "getAccountStatement", targetNamespace = "http://client/", className = "client.GetAccountStatement")
    @ResponseWrapper(localName = "getAccountStatementResponse", targetNamespace = "http://client/", className = "client.GetAccountStatementResponse")
    public byte[] getAccountStatement(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param amount
     * @param targetBank
     * @param myAccount
     * @param targetAccount
     * @param currency
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "transferMoney", targetNamespace = "http://client/", className = "client.TransferMoney")
    @ResponseWrapper(localName = "transferMoneyResponse", targetNamespace = "http://client/", className = "client.TransferMoneyResponse")
    public void transferMoney(
        @WebParam(name = "myAccount", targetNamespace = "")
        int myAccount,
        @WebParam(name = "targetAccount", targetNamespace = "")
        int targetAccount,
        @WebParam(name = "targetBank", targetNamespace = "")
        String targetBank,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount,
        @WebParam(name = "currency", targetNamespace = "")
        String currency)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "isSupportedCurrencyResult", targetNamespace = "")
    @RequestWrapper(localName = "isSupportedCurrency", targetNamespace = "http://client/", className = "client.IsSupportedCurrency")
    @ResponseWrapper(localName = "isSupportedCurrencyResponse", targetNamespace = "http://client/", className = "client.IsSupportedCurrencyResponse")
    public boolean isSupportedCurrency(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns float
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "interestRate", targetNamespace = "")
    @RequestWrapper(localName = "getInterestRate", targetNamespace = "http://client/", className = "client.GetInterestRate")
    @ResponseWrapper(localName = "getInterestRateResponse", targetNamespace = "http://client/", className = "client.GetInterestRateResponse")
    public float getInterestRate()
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param accountNumber
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "existAccountResponse", targetNamespace = "")
    @RequestWrapper(localName = "existAccount", targetNamespace = "http://client/", className = "client.ExistAccount")
    @ResponseWrapper(localName = "existAccountResponse", targetNamespace = "http://client/", className = "client.ExistAccountResponse")
    public boolean existAccount(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber);

    /**
     * 
     * @param name
     * @param currency
     * @return
     *     returns int
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "createAccount", targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://client/", className = "client.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://client/", className = "client.CreateAccountResponse")
    public int createAccount(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "currency", targetNamespace = "")
        String currency)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param amount
     * @param months
     * @param accountNumber
     * @param currency
     * @return
     *     returns int
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "loanNumber", targetNamespace = "")
    @RequestWrapper(localName = "createLoan", targetNamespace = "http://client/", className = "client.CreateLoan")
    @ResponseWrapper(localName = "createLoanResponse", targetNamespace = "http://client/", className = "client.CreateLoanResponse")
    public int createLoan(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber,
        @WebParam(name = "currency", targetNamespace = "")
        String currency,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount,
        @WebParam(name = "months", targetNamespace = "")
        int months)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param amount
     * @param loanNumber
     * @param currency
     * @return
     *     returns java.math.BigDecimal
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "remainMoney", targetNamespace = "")
    @RequestWrapper(localName = "paidPayment", targetNamespace = "http://client/", className = "client.PaidPayment")
    @ResponseWrapper(localName = "paidPaymentResponse", targetNamespace = "http://client/", className = "client.PaidPaymentResponse")
    public BigDecimal paidPayment(
        @WebParam(name = "loanNumber", targetNamespace = "")
        int loanNumber,
        @WebParam(name = "currency", targetNamespace = "")
        String currency,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param accountNumber
     * @return
     *     returns java.util.List<backend.TransactionLogData>
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "transactions", targetNamespace = "")
    @RequestWrapper(localName = "getTransactions", targetNamespace = "http://client/", className = "client.GetTransactions")
    @ResponseWrapper(localName = "getTransactionsResponse", targetNamespace = "http://client/", className = "client.GetTransactionsResponse")
    public List<TransactionLogData> getTransactions(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param accountNumber
     * @return
     *     returns java.util.List<backend.LoanData>
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "loans", targetNamespace = "")
    @RequestWrapper(localName = "getLoans", targetNamespace = "http://client/", className = "client.GetLoans")
    @ResponseWrapper(localName = "getLoansResponse", targetNamespace = "http://client/", className = "client.GetLoansResponse")
    public List<LoanData> getLoans(
        @WebParam(name = "accountNumber", targetNamespace = "")
        int accountNumber)
        throws ClientServiceException_Exception
    ;

    /**
     * 
     * @param amount
     * @param loanNumber
     * @param currency
     * @return
     *     returns java.math.BigDecimal
     * @throws ClientServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "remainMoney", targetNamespace = "")
    @RequestWrapper(localName = "paidLoan", targetNamespace = "http://client/", className = "client.PaidLoan")
    @ResponseWrapper(localName = "paidLoanResponse", targetNamespace = "http://client/", className = "client.PaidLoanResponse")
    public BigDecimal paidLoan(
        @WebParam(name = "loanNumber", targetNamespace = "")
        int loanNumber,
        @WebParam(name = "currency", targetNamespace = "")
        String currency,
        @WebParam(name = "amount", targetNamespace = "")
        BigDecimal amount)
        throws ClientServiceException_Exception
    ;

}
